{"version":3,"sources":["BOX/UI/Navbar/Navbar.js","BOX/UI/chart/Chart.js","BOX/UI/chart/chartbox.js","BOX/countrylist/countryitem.js","BOX/countrylist/countrylist.js","BOX/icon/loading.png","BOX/UI/Container/Datashow.js","BOX/UI/Container/Container.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","id","Chart","ResponsiveContainer","width","height","PieChart","Pie","data","dataKey","startAngle","endAngle","paddingAngle","innerRadius","map","entry","Cell","fill","stroke","name","ChartBox","chartdata","value","active","recovered","deaths","className","style","backgroundColor","borderRadius","margin","Countryitem","onClick","click","country","filter","Countrylist","clickHandler","itemclicked","item","DataShow","isloading","error","ObtainedData","alt","src","loadingimg","Container","useState","setFilter","cases","todayCases","todayDeaths","critical","bool","setObtainedData","setdata","setisloading","seterror","filteredData","setfilteredData","handlefilter","useCallback","filtereddata","obj","index","getdata","a","fetch","response","ok","Error","json","message","useEffect","type","onChange","e","Data","console","log","target","regex","RegExp","array","search","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.312f2095.chunk.js","sourcesContent":["import \"./Navbar.css\";\r\n\r\nconst Navbar=(props)=>{\r\n\r\n    return (\r\n        <div id=\"Navbar\">\r\n        <h1 id=\"site-name\">Corona Tracker</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import {PieChart,Pie,Cell,ResponsiveContainer} from \"recharts\";\r\n\r\nconst Chart=(props)=>{\r\n\r\n    return(\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <PieChart>\r\n                <Pie\r\n                 data={props.data}\r\n                dataKey={props.dataKey}\r\n                startAngle={90}\r\n                endAngle={450}\r\n                paddingAngle={null}\r\n                innerRadius={null}\r\n                \r\n                >\r\n                    {props.data.map(entry=>{\r\n                        return (<Cell\r\n                        key={entry.name}\r\n                        fill={entry.fill}\r\n                        stroke={0}\r\n                        ></Cell>)\r\n                    })}\r\n                </Pie>\r\n            </PieChart>\r\n        </ResponsiveContainer>\r\n    )\r\n}\r\n\r\nexport default Chart;","\r\nimport Chart from \"./Chart\";\r\nconst ChartBox=(props)=>{\r\n    let chartdata=[{\r\n        name:\"active\",\r\n        value:props.active,\r\n        fill:\"#f2ec3a\"\r\n    \r\n      },\r\n      {\r\n        name:\"recovered\",\r\n        value:props.recovered,\r\n        fill:\"#e3526a\"\r\n    \r\n      },\r\n      {\r\n        name:\"deaths\",\r\n        value:props.deaths,\r\n        fill:\"#8F44FD\"\r\n    \r\n      }]\r\n\r\n    return (<>\r\n    <div id=\"chart-container\"> <Chart \r\n    data={chartdata}\r\n    dataKey=\"value\">\r\n    </Chart></div>\r\n  <div className=\"white-Box white-container color-conatiner\">\r\n  <div className=\"color-block\">   <div style={{backgroundColor:\"#f2ec3a\",height:\"10px\",width:\"10px\",borderRadius:\"100%\",margin:\"15px\"}}/><div>active</div></div>\r\n  <div className=\"color-block\"> <div style={{backgroundColor:\"#e3526a\",height:\"10px\",width:\"10px\",borderRadius:\"100%\",margin:\"15px\"}}/><div>recovered</div></div>\r\n      <div className=\"color-block\">    <div style={{backgroundColor:\"#8F44FD\",height:\"10px\",width:\"10px\",borderRadius:\"100%\",margin:\"15px\"}}/><div>deaths</div></div>\r\n      \r\n  </div>\r\n    </>\r\n\r\n    );\r\n}\r\nexport default ChartBox;","\r\nimport \"./countryitem.css\";\r\n\r\nconst Countryitem=(props)=>{\r\n    const clickHandler=()=>{\r\n        props.click(props.country);\r\n    }\r\nreturn (\r\n<div id=\"item-container\" onClick={clickHandler} style={{backgroundColor:props.filter===props.country?'lightblue':'white'}}>\r\n    <h2 className=\"country-name\">{props.country}</h2>\r\n</div>\r\n);\r\n}\r\nexport default Countryitem;","import Countryitem from \"./countryitem\";\r\n\r\nconst Countrylist=(props)=>{\r\n    const clickHandler=(country)=>{\r\n        props.itemclicked(country);\r\n    }\r\n    return (<div id=\"countryList\">\r\n        {props.data.map((item)=>{\r\n            return<Countryitem  click={clickHandler} filter={props.filter} key={item.country} country={item.country}></Countryitem>\r\n        })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Countrylist;","export default __webpack_public_path__ + \"static/media/loading.a755c443.png\";","import loadingimg from \"../../icon/loading.png\";\r\nconst DataShow=(props)=>{\r\n    return (\r\n        <>\r\n        {!props.isloading&&!props.error&&<div className=\"white-Box white-container\"> <div className=\"data-box\">\r\n                   \r\n                     { <span><span>cases :</span> <span>{props.ObtainedData[\"cases\"]}</span><br></br><br></br></span>   }        \r\n                     { <span><span>deaths :</span> <span>{props.ObtainedData[\"deaths\"]}</span><br></br><br></br></span> }  \r\n                { <span>  <span>active :</span> <span>{props.ObtainedData[\"active\"]}</span><br></br><br></br> </span>}  \r\n                { <span><span>recovered :</span> <span>{props.ObtainedData[\"recovered\"]}</span><br></br><br></br></span>}         </div>\r\n                    <div className=\"data-box\">\r\n                   { <span>  <span>Todaycases :</span> <span>{props.ObtainedData[\"todayCases\"]}</span><br></br><br></br></span>}             \r\n      { <span><span>Todaydeaths :</span> <span>{props.ObtainedData[\"todayDeaths\"]}</span><br></br><br></br></span>}\r\n                  \r\n                   { <span><span>critical :</span> <span>{props.ObtainedData[\"critical\"]}</span><br></br><br></br></span>    }         \r\n                     </div> </div> }\r\n                  {props.isloading&&!props.error&&<div className=\"white-Box white-container loading-container\" ><h3>loading</h3><img id=\"loading-img\" alt=\"loading\" src={loadingimg}></img> </div>}\r\n                  {!props.isloading&&props.error!==false&&<div className=\"white-Box white-container\" ><h3>{props.error}</h3> </div>}\r\n        </>\r\n    );\r\n}\r\nexport default DataShow;","import \"./Container.css\";\r\nimport ChartBox from \"../chart/chartbox\";\r\nimport React ,{useState,useEffect,useCallback} from \"react\";\r\nimport Countrylist from \"../../countrylist/countrylist\";\r\nimport DataShow from \"./Datashow\";\r\n\r\n\r\n\r\nconst Container=()=>{\r\n    \r\n    const [filter,setFilter]=useState(\"World\");\r\n    const [ObtainedData,setObtainedData]=useState({cases:0,deaths:0,recovered:0,active:0,todayCases:0,todayDeaths:0,critical:0,bool:false});\r\n    const [data,setdata]=useState([]);\r\n    const [isloading ,setisloading]=useState(false);\r\n    const [error,seterror]=useState(false);\r\n    const [filteredData,setfilteredData]=useState(data);\r\n    const filterChangeHandler=(e)=>{\r\n      \r\n        let Data=[...data];\r\n        console.log(e.target.value);\r\n        let regex=new RegExp(`^${e.target.value}`,'i');\r\n        console.log(regex);\r\n        let array=[];\r\n        for(let index in Data){\r\n\r\n            if((Data[index].country).search(regex)!==(-1)){\r\n                array=[...array,Data[index]]\r\n            }\r\n            \r\n        \r\n        }\r\n        \r\n        setfilteredData(array);\r\n\r\n\r\n    }\r\n    const handlefilter=useCallback(\r\n        (country)=>{\r\n            let filtereddata=data;\r\n            let obj={cases:0,deaths:0,recovered:0,active:0,todayCases:0,todayDeaths:0,critical:0,bool:false};\r\n            for(let index in filtereddata){\r\n                if(filtereddata[index].country!==country){\r\n                   \r\n                   \r\n                   \r\n                }else{ \r\n                    obj={country:filtereddata[index].country,cases:filtereddata[index].cases,deaths:filtereddata[index][\"deaths\"],recovered:filtereddata[index][\"recovered\"],active:filtereddata[index][\"active\"],todayCases:filtereddata[index][\"todayCases\"],\r\n                    todayDeaths:filtereddata[index][\"todayDeaths\"],critical:filtereddata[index][\"critical\"],bool:true};\r\n     \r\n                }\r\n            }\r\n           \r\n            setObtainedData(obj);\r\n        },\r\n        [data],\r\n    )\r\n    const getdata=async ()=>{\r\n       try {setisloading(true);\r\n        const response=await fetch(\"https://coronavirus-19-api.herokuapp.com/countries\");\r\n        if(!response.ok){\r\n            throw new Error(\"something went wrong\");\r\n        }\r\n        const data=await response.json();\r\n        setisloading(false);\r\n        setdata(data);\r\n        setfilteredData(data);}catch(error){\r\n            seterror(error.message);\r\n            setisloading(false);\r\n        }\r\n         \r\n     }\r\n    \r\n    useEffect(()=>{\r\n        getdata();\r\n       \r\n    },[]);\r\n    useEffect(()=>{\r\n        handlefilter(\"World\");\r\n       \r\n    },[handlefilter]);\r\n    \r\n  \r\n    const itemClickHandler=(country)=>{\r\n        setFilter(country);\r\n        handlefilter(country);\r\n       \r\n    }\r\n    \r\n    return(\r\n        <div className=\"Container\">\r\n            <div className=\"white-Box\">\r\n            <div className=\"Container content-box\">\r\n            <ChartBox active={ObtainedData[\"active\"]} recovered={ObtainedData[\"recovered\"]} deaths={ObtainedData[\"deaths\"]} critical={ObtainedData[\"critical\"] }></ChartBox>\r\n                 <h1 id=\"heading\">{ObtainedData[\"country\"]}</h1><br></br>\r\n                 \r\n                 <DataShow ObtainedData={ObtainedData} error={error} isloading={isloading}></DataShow>\r\n                </div>\r\n                \r\n            <div className=\"Container content-box Countrylist\">\r\n                <div id=\"dropbox-container\">\r\n                <h1 id=\"filter-text\">Search</h1>\r\n                <input type=\"search\" id=\"select\" onChange={filterChangeHandler}></input>\r\n                   \r\n                </div>\r\n                    <Countrylist itemclicked={itemClickHandler} filter={filter} data={filteredData}></Countrylist>\r\n               \r\n\r\n            </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Container;","\nimport './App.css';\nimport NavBar from \"./BOX/UI/Navbar/Navbar\";\nimport Container from \"./BOX/UI/Container/Container\";\nfunction App() {\n \n  return (\n    <div className=\"App\">\n      <NavBar></NavBar>\n      <Container></Container>\n    </div>)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}